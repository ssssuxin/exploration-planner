<?xml version="1.0" encoding="utf-8"?>	

<launch>
	
	  <arg name="robot_name" default="ugv1" />
	  <arg name="simulator" default="/vrep" />
	  
	  <arg name="respawn_value" default="false" /> <!-- boolean: true, false -->
	  
	  <arg name="use_queue_path_planner" default="false" /> <!-- select which planner do you want; 
														     the domain is boolean: true  -> queue_path_planner
																					false -> path_planner
														      
														     -->
	
      <arg name="enable_multi"     default="true"/>  <!-- enable/disable multi-robot coordination -->	
      <arg name="number_of_robots" default="2"/> 
      <arg name="lambda_trav"      default="1.0"/>       
      
    									     
	  <!-- launch mapping -->
	  <include file="$(find path_planner)/launch/sim_mapping_$(arg robot_name).launch">
		  <arg name="respawn_value" value="$(arg respawn_value)" />
	  </include>	
	  
	  <!-- launch traversability -->
	  <include file="$(find path_planner)/launch/sim_traversability_$(arg robot_name).launch">
	      <arg name="simulator" value="$(arg simulator)" />
		  <arg name="respawn_value" value="$(arg respawn_value)" />
          <arg name="robot_name" value="$(arg robot_name)" />
          <arg name="enable_multi_robot_avoidance"  value="$(arg enable_multi)" />
          <arg name="number_of_robots" value="$(arg number_of_robots)" /> 
	  </include>	
	  	  

	   <!-- BLOCK FOR SELECTING THE PATH PLANNER TYPE -->
		<group unless="$(arg use_queue_path_planner)">  <!-- use path planner manager (interface by using the marker controller) -->
		  <include file="$(find path_planner)/launch/sim_path_planner_manager_$(arg robot_name).launch">
			  <arg name="simulator" value="$(arg simulator)" />
			  <arg name="respawn_value" value="$(arg respawn_value)" />
			  <arg name="use_marker_controller" value="true" />
			  <arg name="lambda_trav" value="$(arg lambda_trav)"/>  
		  </include>	
		</group>
		<group if="$(arg use_queue_path_planner)"> <!-- use queue path planner (global) + path planner manager (local) -->
		  <include file="$(find path_planner)/launch/sim_queue_path_planner_$(arg robot_name).launch">
			  <arg name="simulator" value="$(arg simulator)" />
			  <arg name="respawn_value" value="$(arg respawn_value)" />
			  <arg name="lambda_trav" value="$(arg lambda_trav)"/>  			  
		  </include>	
		  <include file="$(find path_planner)/launch/sim_path_planner_manager_$(arg robot_name).launch">
			<arg name="simulator" value="$(arg simulator)" />
			<arg name="respawn_value" value="$(arg respawn_value)" />
			<arg name="use_marker_controller" value="false" /> <!-- do not use single-wp marker along with queue path planner -->
			<arg name="lambda_trav" value="$(arg lambda_trav)"/>  			
		</include>	
		</group>
	  
      <!-- launch the trajectory control -->
	  <include file="$(find trajectory_control)/launch/sim_trajectory_control_$(arg robot_name).launch">
		  <arg name="simulator" value="$(arg simulator)" />
		  <arg name="respawn_value" value="$(arg respawn_value)" />
          <arg name="robot_name" value="$(arg robot_name)" />
	  </include>	
	  
	  <!-- launch rviz -->
	  <include file="$(find path_planner)/launch/rviz_sim_path_planning.launch"/>

</launch>
