<?xml version="1.0" encoding="utf-8"?>

<launch>

    <arg name="robot_name" default="ugv1" />
    <arg name="simulator" default="/vrep" />

    <arg name="robot_point_cloud_base_topic" default="filtered_pointcloud" />  
    <arg name="number_of_robots" default="2" /> <!-- multi -->
    <arg name="param_file" default="$(find expl_planner)/launch/exploration.yaml" />

    <arg name="respawn_value" default="false" /> <!-- boolean: true, false -->
    <arg name="use_marker_controller" default="true" /> <!-- boolean: true, false -->
    <arg name="battery" default="false" />

    <arg name="sim_file" default="$(find expl_planner)/launch/sim_settings.yaml" if="$(arg battery)" />
    <arg name="sim_file" default="$(find expl_planner)/launch/exploration.yaml" unless="$(arg battery)" />

    <arg name="use_router" default="true" /> <!-- select if you want to use the router -->


    <node name="expl_planner_$(arg robot_name)" pkg="expl_planner" type="expl_planner_node" respawn="$(arg respawn_value)" output="screen">

        <rosparam command="load" file="$(arg param_file)" />
        <rosparam command="load" file="$(arg sim_file)" />

        <param name="simulator" value="$(arg simulator)" />

        <param name="robot_name" value="$(arg robot_name)" />
        <param name="number_of_robots" value="$(arg number_of_robots)" />
        <param name="other_robot_dynamic_point_cloud_base_topic" value="$(arg robot_point_cloud_base_topic)" />                 

        <param name="robot_frame_name" value="$(arg robot_name)/base_link"/>

        <param name="use_marker_controller" value="$(arg use_marker_controller)"/>
        <param name="int_marker_server_name" value="$(arg simulator)/$(arg robot_name)/expl_marker_controller"/>
        <param name="int_marker_name" value="expl_marker_$(arg robot_name)"/>

        <param name="path_plan_status_topic" value="$(arg simulator)/$(arg robot_name)/path_planning_status"/>

        <param name="path_planning_service_name" value="$(arg simulator)/$(arg robot_name)/path_planning_service"/>

        <remap from="/clustered_pcl/wall" to="$(arg simulator)/$(arg robot_name)/clustered_pcl/wall"/>
        <remap from="/trav/traversability" to="$(arg simulator)/$(arg robot_name)/trav/traversability"/>

        <remap from="/goal_topic" to="$(arg simulator)/$(arg robot_name)/goal_topic"/>
        <remap from="/goal_abort_topic" to="$(arg simulator)/$(arg robot_name)/goal_abort_topic"/>
        <remap from="/robot_rotation" to="$(arg simulator)/$(arg robot_name)/robot_rotation"/>

        <remap from="/planner/tasks/feedback" to="$(arg simulator)/$(arg robot_name)/planner/tasks/feedback"/>

        <remap from="/expl_pause_topic" to="/expl_pause_topic"/> <!-- this is for all the robots -->

        <remap from="/expl_planner/visited_nodes" to="$(arg simulator)/$(arg robot_name)/expl_planner/visited_nodes"/>
        <remap from="/expl_planner/path" to="$(arg simulator)/$(arg robot_name)/expl_planner/path"/>

        <remap from="/expl_planning_status" to="$(arg simulator)/$(arg robot_name)/expl_planning_status"/>

        <remap from="/expl_planner/inspection_path" to="$(arg simulator)/$(arg robot_name)/expl_planner/inspection_path"/>
        <remap from="/expl_planner/exploration_path" to="$(arg simulator)/$(arg robot_name)/expl_planner/exploration_path"/>
        <remap from="/expl_planner/exploration_nodes" to="$(arg simulator)/$(arg robot_name)/expl_planner/exploration_nodes"/>
        <remap from="/expl_planner/frontier_tree" to="$(arg simulator)/$(arg robot_name)/expl_planner/frontier_tree"/>
        <remap from="/expl_planner/frontier_clusters" to="$(arg simulator)/$(arg robot_name)/expl_planner/frontier_clusters"/>
        <remap from="/expl_planner/back_nav_tree" to="$(arg simulator)/$(arg robot_name)/expl_planner/back_nav_tree"/>

        <remap from="/expl_planner/exploration_pointcloud" to="$(arg simulator)/$(arg robot_name)/$(arg robot_point_cloud_base_topic)"/> <!-- this is the input pointcloud of the nbv planner -->

        <remap from="/volumetric_mapping/pointcloud2" to="$(arg simulator)/$(arg robot_name)/volumetric_mapping/pointcloud2"/> <!-- for routing teammate scans toward individual volumetric mapping -->
        
        <!-- volumetric mapping specific -->
        <!--remap from="/expl_planner_$(arg robot_name)/octomap_occupied" to="$(arg simulator)/$(arg robot_name)/expl_planner/octomap_occupied"/-->
        <!--remap from="/expl_planner_$(arg robot_name)/octomap_free" to="$(arg simulator)/$(arg robot_name)/expl_planner/octomap_free"/-->

    </node>

	<group if="$(arg use_router)">

        <!-- routing teammate scans toward this robot dense/traversability volumetric mapping -->
        <node name="expl_router_$(arg robot_name)" pkg="expl_planner" type="expl_router_node" respawn="$(arg respawn_value)" output="screen">

            <rosparam command="load" file="$(arg param_file)" />
            <rosparam command="load" file="$(arg sim_file)" />

            <param name="simulator" value="$(arg simulator)" />

            <param name="robot_name" value="$(arg robot_name)" />
            <param name="number_of_robots" value="$(arg number_of_robots)" />
            <param name="other_robot_dynamic_point_cloud_base_topic" value="$(arg robot_point_cloud_base_topic)" />                 

            <param name="robot_frame_name" value="$(arg robot_name)/base_link"/>

            <remap from="/volumetric_mapping/pointcloud2" to="$(arg simulator)/$(arg robot_name)/volumetric_mapping/pointcloud2"/> <!-- for routing teammate scans toward individual volumetric mapping -->
        
        </node>

	</group>

</launch>
