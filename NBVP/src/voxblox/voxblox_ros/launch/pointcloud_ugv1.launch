<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="robot_name" default="ugv1" />
  <arg name="publish_mesh_pointcloud" default="true" />   

  <arg name="pointcloud_in" default="/$(arg robot_name)/os_cloud_node/points" />

  <arg name="publish_pointclouds_on_update" default="false" />  
  

  <node name="voxblox_node_$(arg robot_name)" pkg="voxblox_ros" type="tsdf_server" output="screen" args="">
    <!-- input -->
    <remap from="pointcloud" to="$(arg pointcloud_in)"/>

    <!-- params --> 
    <param name="tsdf_voxel_size" value="0.1" />
    <param name="truncation_distance" value="0.5" />
    <param name="color_mode" value="normals" />
    <param name="enable_icp" value="false" />
    <param name="icp_refine_roll_pitch" value="false" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="mesh_min_weight" value="2" />
    <param name="method" value="fast" />
    <param name="max_ray_length_m" value="10.0" />
    <param name="use_const_weight" value="true" />
    <param name="world_frame" value="map"/>
    <param name="verbose" value="true" />

    <param name="publish_mesh_pointcloud" value="$(arg publish_mesh_pointcloud)" />
    <param name="publish_pointclouds_on_update" value="$(arg publish_pointclouds_on_update)" />

    <!--param name="output_mesh_as_pointcloud" value="true" /-->
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon pointcloud).ply" />
  </node>

</launch>
